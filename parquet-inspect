#!/usr/bin/env python3

import argparse
import pandas as pd
from pathlib import Path

def list_columns(file_path: Path) -> None:
    try:
        df = pd.read_parquet(file_path)
        print("Columns in the Parquet file with types:")
        for column, dtype in df.dtypes.items():
            print(f"{column}: {dtype}")
    except Exception as e:
        print(f"An error occurred: {e}")

def list_unique(file_path: Path, column_name: str) -> None:
    try:
        df = pd.read_parquet(file_path)
        unique_values = df[column_name].dropna().unique()
        print(f"Unique values in column '{column_name}':")
        for value in unique_values:
            print(value)
    except Exception as e:
        print(f"An error occurred: {e}")

def print_head(file_path: Path, num_rows: int = 5) -> None:
    """
    Print the first few rows of the Parquet file.

    Args:
    file_path (Path): Path to the Parquet file.
    num_rows (int): Number of rows to display.
    """
    print(f"First {num_rows} rows of the Parquet file:")
    try:
        df = pd.read_parquet(file_path)
        print(df.head(num_rows))
    except Exception as e:
        print(f"An error occurred: {e}")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(prog="parquet-inspect", description="Inspect Parquet files.")
    subparsers = parser.add_subparsers(dest="command", help="Sub-command help")

    # Sub-parser for the 'columns' command
    parser_columns = subparsers.add_parser('columns', help="List columns in a Parquet file with their types.")
    parser_columns.add_argument("file_path", type=Path, help="Path to the Parquet file.")
    parser_columns.set_defaults(func=list_columns)

    # Sub-parser for the 'unique' command
    parser_unique = subparsers.add_parser('unique', help="List unique values within a column in a Parquet file.")
    parser_unique.add_argument("file_path", type=Path, help="Path to the Parquet file.")
    parser_unique.add_argument("column_name", type=str, help="Column name to list unique values from.")
    parser_unique.set_defaults(func=list_unique)

    parser_head = subparsers.add_parser('head', help="Print the first few rows of a Parquet file.")
    parser_head.add_argument("file_path", type=Path, help="Path to the Parquet file.")
    parser_head.add_argument("-n", "--num_rows", type=int, default=5, help="Number of rows to display. Default is 5.")
    parser_head.set_defaults(func=print_head)

    # Parse the arguments
    args = parser.parse_args()

    # Call the default function based on the sub-command
    if hasattr(args, 'func'):
        if args.command == "columns":
            args.func(args.file_path)
        elif args.command == "unique":
            args.func(args.file_path, args.column_name)
        elif args.command == "head":
            args.func(args.file_path, args.num_rows)
    else:
        parser.print_help()

