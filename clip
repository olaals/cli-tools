#!/bin/bash

# clip_recursive.sh
# Usage: ./clip_recursive.sh [--tree] [--cmd "ls -la"] filename1.txt dir1/ filename2.txt ...

final_content=""
include_tree=false
cmd_command=""

# Loop through all arguments to handle optional flags
while [ "$#" -gt 0 ]; do
	case "$1" in
	--tree)
		include_tree=true
		shift 1
		;;
	--cmd)
		cmd_command="$2"
		shift 2
		;;
	*)
		break
		;;
	esac
done

# Check for minimum number of arguments
if [ "$#" -lt 1 ]; then
	echo "Usage: $0 [--tree] [--cmd \"command_to_run\"] filename1.txt dir1/ filename2.txt ..."
	exit 1
fi

# If --tree flag is present, add the output of `tree` to final_content
if [ "$include_tree" = true ]; then
	final_content+="== File Tree ==\n"
	final_content+="$(tree -L 3 --gitignore)\n\n"
fi

# If --cmd flag is present, run the command and add its output to final_content
if [ ! -z "$cmd_command" ]; then
	final_content += "$cmd_command\n"
	final_content+="== Command Output ==\n"
	final_content+="$(eval $cmd_command 2>&1)\n\n"
fi

# Recursive function to read a file or directory
process_item() {
	local item=$1
	if [ -f "$item" ]; then
		final_content+="== $item ==\n"
		final_content+="$(cat "$item")\n\n"
	elif [ -d "$item" ]; then
		for sub_item in "$item"/*; do
			process_item "$sub_item"
		done
	else
		echo "Item $item does not exist."
		exit 1
	fi
}

# Loop through remaining arguments to process files and directories
for item in "$@"; do
	process_item "$item"
done

# Copy the final_content to clipboard
echo -e "$final_content" | pbcopy

echo "Contents of files and directories copied to clipboard."
