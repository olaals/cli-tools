#!/usr/bin/env python3
from pathlib import Path
import cv2
import typer
import matplotlib.pyplot as plt
from matplotlib.figure import Figure
from typing import Any

app = typer.Typer()

def variance_of_laplacian(image: Any) -> float:
    """Compute the Laplacian of the image and return its variance as a measure of blurriness."""
    return cv2.Laplacian(image, cv2.CV_64F).var()

@app.command()
def main(
    image1_path: Path = typer.Argument(..., help="Path to the first image"),
    image2_path: Path = typer.Argument(..., help="Path to the second image")
) -> None:
    # Load images in color
    img1 = cv2.imread(str(image1_path))
    img2 = cv2.imread(str(image2_path))
    
    if img1 is None or img2 is None:
        typer.echo("Error: One or both images could not be loaded.")
        raise typer.Exit(code=1)
    
    # Compute blurriness scores on grayscale versions
    gray1 = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)
    gray2 = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)
    blur_score1 = variance_of_laplacian(gray1)
    blur_score2 = variance_of_laplacian(gray2)
    
    # Convert images to RGB for matplotlib
    img1_rgb = cv2.cvtColor(img1, cv2.COLOR_BGR2RGB)
    img2_rgb = cv2.cvtColor(img2, cv2.COLOR_BGR2RGB)
    
    # Create a matplotlib figure with two subplots
    fig: Figure = plt.figure(figsize=(10, 5))
    
    ax1 = fig.add_subplot(1, 2, 1)
    ax1.imshow(img1_rgb)
    ax1.axis("off")
    ax1.set_title(f"Blur Score: {blur_score1:.2f}")
    
    ax2 = fig.add_subplot(1, 2, 2)
    ax2.imshow(img2_rgb)
    ax2.axis("off")
    ax2.set_title(f"Blur Score: {blur_score2:.2f}")
    
    plt.tight_layout()
    plt.show()

if __name__ == "__main__":
    app()
