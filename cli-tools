#!/bin/bash

# Function to display help text
display_help() {
	printf "Usage: $0 [OPTIONS]\n"
	printf "A script to list executable files and do other things.\n\n"
	printf "Options:\n"
	printf "  --help     Show this help message\n"
	printf "  --list [GLOB_PATTERN]     List executable files matching the optional GLOB_PATTERN\n"
}

# Convert glob pattern to regex pattern
glob_to_regex() {
	local glob="$1"
	glob="${glob//\./\\.}" # escape dots
	glob="${glob//\*/.*}"  # replace '*' with '.*'
	glob="${glob//\?/.}"   # replace '?' with '.'
	echo "^$glob$"
}

# Function to list executable files
list_executables() {
	local glob="$1"
	local regex=$(glob_to_regex "$glob")
	# Get the directory of the currently executing script
	dir=$(dirname "$0")

	# List only the executable files in that directory matching the regex pattern
	ls -l "$dir" | awk -v pattern="$regex" '/^-..x/ && $NF ~ pattern {print $NF}' | while read -r file; do
		printf "\033[1;33m$file\033[0m\n"
	done
}

# Flag to check if any argument is passed
flag=0

# Check for arguments
while [ "$#" -gt 0 ]; do
	case "$1" in
	--help)
		display_help
		exit 0
		;;
	--list)
		flag=1
		glob_pattern="*"
		if [ "$#" -gt 1 ] && [[ ! "$2" =~ ^-.* ]]; then
			glob_pattern="$2"
			shift
		fi
		printf "\033[1;34mListing executable files matching pattern: $glob_pattern...\033[0m\n\n"
		list_executables "$glob_pattern"
		printf "\n"
		exit 0
		;;
	*)
		printf "Unknown argument: $1\n"
		display_help
		exit 1
		;;
	esac
	shift
done

# If no arguments are passed, display welcome and list executables
if [ $flag -eq 0 ]; then
	printf "\033[1;34mWelcome to \033[1;33mcli-tools\033[0m\n"
	printf "\033[1;30mRun with --help to see more options\033[0m\n"
	printf "\033[1;34mListing executable files...\033[0m\n\n"
	list_executables "*"
	printf "\n"
fi
